@model Aloe.Models.LOITemplateEntity
@{
    ViewBag.Title = "LOITemplate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SaveTemp", "LOITemplates", new { EditTemplate = Request.Params["EditTemplate"] }, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return FormValidate(); " }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(Model => Model.LOITempPoints)

    @Html.HiddenFor(m => m.Status)
    <div><h1>@ViewBag.Save</h1></div>
    <div><h1>@ViewBag.ErrorMessage</h1></div>
    <div class="row">
        <div class="container tabs_col_wrapper">
            <form class="form-inline">
                <div class="register_heading">
                    <h1>LOI Template </h1>
                </div>
             
              @if (@ViewBag.SMsg != null && @ViewBag.SMsg != "")
              { <div style="color:green; margin-left:4px; font-weight:500;">@ViewBag.SMsg</div> }
                <div id="msgstatus" class="hidden">
                    <h4 class="error">You can not edit this Template because it is already used on another deal.</h4>
                </div>


                @Html.HiddenFor(Model => Model.ID)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label for="exampleInputName2" style="color:#95acbc;">&nbsp;Name</label>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "width:300px; margin:0 0 10px 4px;" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger Name" })
                </div>
                <div class="form-group">
                    <label for="exampleInputName2" style="color:#95acbc; ">&nbsp;Description</label>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <div class="form-group hidden">
                    @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group hidden">
                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group hidden">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group hidden">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div><h1>@ViewBag.ErrorMessage</h1></div>
                <label for="exampleInputName2" style="color:#95acbc;">&nbsp;Points</label>

                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @Placeholder = "Type Deal Points here..", @class = "form-control " } })
                <input type="hidden" value="no" id="FrmSubmit" />
                <span id="QuestionValid" class="text-danger Question"> </span>
                <input type="button" id="btnCreateButton" value="Create Question" class="btn btn-default hidden" onclick="GetPoints();" />
                <input type="submit" id="FinalSave" value="SAVE" class="btn btn-default hidden" />
            </form>

            &nbsp;<button id="AddDP" class="btn btn-info" onclick="btnCreateButtonClick();" style="background:#129fdd; margin-bottom:10px; margin-top:20px;font-weight:bold;" type="button">ADD DEAL POINT</button>
            <div class="table-responsive loi_content_main">
                <div id="LoiPoints">@Html.Partial("PointList")</div>
            </div>
            <button id="sve" class="btn btn-primary btnpanel" type="button" onclick="FinalSave_click('0');"><b>SAVE</b></button>
            <a class="btn btn-default btnpanel" type="button" href="/Home/"><b>CANCEL</b></a>
            <a class="btn btn-default" href="/LOITemplates/BackToDeal?EditTemplate=@Request.Params["EditTemplate"]&DlID=@Request.Params["DlID"]"><b>BACK TO DEAL</b></a>
           
        </div>
    </div>
    <br>
    <div id="vname" class="hidden"></div>
    <script type="text/javascript">
        var status = '0';

        function FinalSave_click(FrmValue) {

            var Tempstatus = '0'
            var TextValue = document.getElementById('Name').value;
            var text = $('.table').text()
            if (TextValue == '') {
                $('.Name').html('Template name is required.');
                Tempstatus = '1';
            }
            else {
                $('.Name').html('');
            }

            if (Tempstatus == '0') {
                if (FrmValue == '0') {
                    if ($('#vname').text() == 'True') {
                        var st = confirm("Template name is already exist. Do you want create anyway?");
                        if (st == true) {
                            var b = document.getElementById('FinalSave');
                            $("#FrmSubmit").val("submit");
                            b.click();
                        }
                    }
                    else {
                        var b = document.getElementById('FinalSave');
                        $("#FrmSubmit").val("submit");
                        b.click();
                    }
                }
            }
            if (Tempstatus == '1') { return false; }
        }
        function FormValidate() {
            if ($("#FrmSubmit").val() == "submit") return true;
            return false;
        }

        function btnCreateButtonClick() {
            var a = document.getElementById('btnCreateButton');
            a.click();
        }

        function GetPoints() {
            if ($('#Status').val() == '0') {
                var vName = $("#Name").val();
                var vDescription = $("#Description").val();
                var vUserID = $("#UserID").val();
                var vCreatedDate = $("#CreatedDate").val();
                var vModifiedDate = $("#ModifiedDate").val();
                var vStatus = $("#Status").val();
                var vQuestion = $("#Question").val();
                if (vQuestion != "") {
                    $('.btnpanel').removeClass('hidden');
                    $('#QuestionValid').html('');
                    $("#LoiPoints").load('@(Url.Action("CreateTemp", "LOITemplates", null, Request.Url.Scheme))?' +
                        'Name=' + encodeURIComponent(vName) +
                        '&Description=' + encodeURIComponent(vDescription) +
                        '&UserID=' + encodeURIComponent(vUserID) +
                        '&CreatedDate=' + encodeURIComponent(vCreatedDate) +
                        '&ModifiedDate=' + encodeURIComponent(vModifiedDate) +
                        '&Status=' + encodeURIComponent(vStatus) +
                        '&Question=' + encodeURIComponent(vQuestion)
                       );
                    $("#Question").val("");
                } else { $('#QuestionValid').html('Please input Deal points <br /> '); }
            }
        }


 
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            if (($("#mytable tr ").length) == 0) { $('.btnpanel').addClass('hidden'); }

            if ($('#Status').val() != '0') {
                //$('#sve').addClass('disabled');
                //$('#sve').css({ "pointer-events": "none" })
                //$('#AddDP').addClass('disabled');
                //$('#AddDP').css({ "pointer-events": "none" })
                $('#msgstatus').removeClass('hidden');

                $('#sve').remove();
                $("#Question").remove();
                $('#AddDP').remove();

                $('#Name').attr("disabled", "disabled");
                $('#Description').attr("disabled", "disabled");

            }
            else {
                $('#msgstatus').addClass('hidden');
            }



            //** Enter Event for Add Deal Points
            $('#Question').bind("enterKey", function (e) {
                $("#AddDP").click();
            });
            $('#Question').keyup(function (e) {
                if (e.keyCode == 13) {
                    $(this).trigger("enterKey");
                }
            });
            //==================================
        });
        function UpdateTemp(ID) {
            var vQuestion = $("#" + ('U' + ID)).val();
            $("#LoiPoints").load('@(Url.Action("UpdateTemp", "LOITemplates", null, Request.Url.Scheme))?' +
                    'id=' + encodeURIComponent(ID) +
                    '&DPoint=' + encodeURIComponent(vQuestion));
            $("#BtnUpd" + ID).addClass("disabled");
        }
        function DeleteTemp(ID) {

            if (($("#mytable tr ").length) == 1) { $('.btnpanel').addClass('hidden'); }
            $("#LoiPoints").load('@(Url.Action("DeleteTemp", "LOITemplates", null, Request.Url.Scheme))?' +
             'id=' + encodeURIComponent(ID));
        }
        function ValidateName1() {

            var Srch = document.getElementById('Name').value;
            //alert(Srch.split(' ').join(''));
            $("#vname").load('@(Url.Action("ValidateName", "LOITemplates", null, Request.Url.Scheme))?TemplateName=' + Srch.split(' ').join(''));
        }
        $('#Name').blur(function () {
            if (getUrlVars() == 'TempID') { $("#vname").html('false'); }
            else {
                ValidateName1();
            }
        })
        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }
        $(document).ready(function () {
            $.ajaxSetup({ cache: false });
        });
    </script>
    <script>
        function BackToDeal()
        {
            ///Deal/Create
            @*let EditTemplt = '@Request.Params["EditTemplate"]';
            let Dealid = decodeURI('@Request.Params["DlID"]');
            if ('@Request.Params["EditTemplate"]' == "True") {window.location.href ="/Deal/DealInitialTerm?DealID=@Request.Params["DlID"]";}
            else {window.location.href='/Deal/Create';}*@
        }
    </script>
}


