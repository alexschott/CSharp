@model Aloe.DB_Context.AspNetUser

@{
    ViewBag.Title = "Personal Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container login_center">
    <div class="row">
        <div class="col-lg-12">

            @*<div class="text-center logo">
                    <img src="~/Content/images/logo.png">
                </div>*@
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SendForm('1');" }))
            {
                @Html.AntiForgeryToken()

                <br>
                <div class="register_heading">
                    <h1>PERSONAL DETAILS</h1>
                    <p style=" color:#29a329;"><b>@ViewBag.Msg</b></p>
                </div>

                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.PasswordHash);
                @Html.HiddenFor(m => m.SecurityStamp);
                @Html.HiddenFor(model => model.Id)
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger Name UserName" })
                @Html.LabelFor(model => model.UserName, "Name", new { @class = "label_mar1" })
                <div class="form-group input-group">
                    <i class="fa fa-question-circle imp_ico" data-toggle="tooltip" data-placement="left" title="Only alphabet(s)"></i>
                    <span class="input-group-addon"><img src="../../images/user_ico.png"></span>
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control input-lg" })
                </div>

                @Html.LabelFor(model => model.Email, "Email", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <i class="fa fa-question-circle imp_ico" data-toggle="tooltip" data-placement="left" title="Email not allowed to update"></i>
                    <span class="input-group-addon"><i style="color:#c8d3dc; font-size:18px" class="fa fa-envelope-o "></i></span>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-lg ", @readonly = "readonly" })

                </div>

                <!--
                <div class="form-group input-group imp">
                    <i class="fa fa-question-circle imp_ico" data-toggle="tooltip" data-placement="left" title="Your message here"></i>
                    <span class="input-group-addon">&nbsp;<img src="images/lock.png"></span>

                    <input type="password" placeholder="PASSWORD" class="form-control input-lg">
                </div>
                    -->
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger Name Phone" })
                @Html.LabelFor(model => model.Phone, "Phone", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon">&nbsp;<i style="color:#c8d3dc; font-size:21px" class="fa fa-phone"></i></span>
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control input-lg ", @maxlength = "29" })
                </div>

                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger Name Company" })
                @Html.LabelFor(model => model.Company, "Company", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon"><i style="color:#c8d3dc; font-size:19px" class="fa fa-ils"></i></span>
                    @Html.TextBoxFor(model => model.Company, new { @class = "form-control input-lg", @maxlength = "160" })
                </div>

                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger Name Street" })
                @Html.LabelFor(model => model.Street, "Street", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon"><i style="color:#c8d3dc; font-size:19px" class="fa fa-ils"></i></span>
                    @Html.TextBoxFor(model => model.Street, new { @class = "form-control input-lg", @maxlength = "160" })
                </div>

                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger Name City" })
                @Html.LabelFor(model => model.City, "City", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon">&nbsp;<i style="color:#c8d3dc; font-size:19px" class="fa fa-level-up"></i></span>
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control input-lg", @maxlength = "60" })
                    <!-- <input type="text" placeholder="CITY" class="form-control input-lg"> -->
                </div>

                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger Name State" })
                @Html.LabelFor(model => model.State, "State", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon"><i style="color:#c8d3dc; font-size:19px" class="fa fa-location-arrow"></i></span>
                    <select id="st" class="choice form-group form-control input-lg form-group_margin disabled">
                        <option value="AL">Alabama</option>
                        <option value="AK">Alaska</option>
                        <option value="AZ">Arizona</option>
                        <option value="AR">Arkansas</option>
                        <option value="CA">California</option>
                        <option value="CO">Colorado</option>
                        <option value="CT">Connecticut</option>
                        <option value="DE">Delaware</option>
                        <option value="DC">District of Columbia</option>
                        <option value="FL">Florida</option>
                        <option value="GA">Georgia</option>
                        <option value="HI">Hawaii</option>
                        <option value="ID">Idaho</option>
                        <option value="IL">Illinois</option>
                        <option value="IN">Indiana</option>
                        <option value="IA">Iowa</option>
                        <option value="KS">Kansas</option>
                        <option value="KY">Kentucky</option>
                        <option value="LA">Louisiana</option>
                        <option value="ME">Maine</option>
                        <option value="MD">Maryland</option>
                        <option value="MA">Massachusetts</option>
                        <option value="MI">Michigan</option>
                        <option value="MN">Minnesota</option>
                        <option value="MS">Mississippi</option>
                        <option value="MO">Missouri</option>
                        <option value="MT">Montana</option>
                        <option value="NE">Nebraska</option>
                        <option value="NV">Nevada</option>
                        <option value="NH">New Hampshire</option>
                        <option value="NJ">New Jersey</option>
                        <option value="NM">New Mexico</option>
                        <option value="NY">New York</option>
                        <option value="NC">North Carolina</option>
                        <option value="ND">North Dakota</option>
                        <option value="OH">Ohio</option>
                        <option value="OK">Oklahoma</option>
                        <option value="OR">Oregon</option>
                        <option value="PA">Pennsylvania</option>
                        <option value="RI">Rhode Island</option>
                        <option value="SC">South Carolina</option>
                        <option value="SD">South Dakota</option>
                        <option value="TN">Tennessee</option>
                        <option value="TX">Texas</option>
                        <option value="UT">Utah</option>
                        <option value="VT">Vermont</option>
                        <option value="VA">Virginia</option>
                        <option value="WA">Washington</option>
                        <option value="WV">West Virginia</option>
                        <option value="WI">Wisconsin</option>
                        <option value="WY">Wyoming</option>
                    </select>




                    @Html.TextBoxFor(model => model.State, new { @class = "form-control input-lg hidden", @maxlength = "60" })

                    <!-- <input type="text" placeholder="STATE" class="form-control input-lg"> -->
                </div>
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger Name PostalCode" })
                @Html.LabelFor(model => model.PostalCode, "Postal Code", new { @class = "label_mar1" })
                <div class="form-group input-group imp">
                    <span class="input-group-addon"><i style="color:#c8d3dc; font-size:19px" class="fa fa-ellipsis-h"></i></span>
                    @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control input-lg", @maxlength = "30" })
                    <!-- <input type="text" placeholder="POSTAL CODE" class="form-control input-lg"> -->
                </div>
                <div class="form-group imp hidden">
                    <textarea type="text" placeholder="ADDRESS" class="form-control input-lg"></textarea>
                </div>
                <label class="label_mar1" for="UserRoles">Role</label>

                @Html.DropDownList("UserRoles", new SelectList(ViewBag.Name, "Value", "Text", ViewBag.RoleID), new { @class = "choice form-group form-control input-lg form-group_margin disabled", @style = "pointer-events:none", @readonly = "readonly" })

                <div class="row" style="margin-left:-15px; margin-right:-15px;">
                    <div class="col-md-12">
                        <button type="button" class="reg_btn2" onclick="SendForm('0');">
                            <i style="font-size:18px" class="fa fa-floppy-o"></i>&nbsp;&nbsp;SAVE
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="sbmt" value="Save" class="btn btn-default hidden" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Email").attr('disabled', "disabled");
        $("#UserRoles").attr('disabled', "disabled");
        set_ip_base_country();
        $("#st").change(function () {
            var end = this.value;
            var firstDropVal = $('#pick').val();
            document.getElementById('State').value = end;
        });
    });
    function set_ip_base_country() {
        var stateName = document.getElementById('State').value;
        $('#st').val(stateName)
    }
    function SendForm(formvalue) {
        var status = '0';
        var UserName = document.getElementById('UserName').value;
        var Phone = document.getElementById('Phone').value;
        var Company = document.getElementById('Company').value;
        var Street = document.getElementById('Street').value;
        var City = document.getElementById('City').value;
        var State = document.getElementById('State').value;
        var PostalCode = document.getElementById('PostalCode').value;

        var letters_Space = /^[A-Za-z ]+$/;
        var regex = /^[a-zA-Z 0-9]*$/;

        if (UserName == '' || UserName.length < 2) {
            $('.UserName').html('The name field must be at least 2 characters long  </br>');
            status = '1';
        }
        if (!UserName.match(letters_Space)) {
            $('.UserName').html('Only Alphabet(s) allowed </br>');
            status = '1';
        }
        if (Phone == '') {
            $('.Phone').html('The Phone field is required. </br>');
            status = '1';
        }
        if (Company == '') {
            $('.Company').html('The Company field is required </br>');
            status = '1';
        }
        /* if (!Street.match(letters_Space)) {
             $('.Street').html('Only Alphabet(s) allowed');
             status = '1';
         }*/
        if (Street == '') {
            $('.Street').html('The Street field is required </br>');
            status = '1';
        }
        if (!City.match(letters_Space)) {
            $('.City').html('Only Alphabet(s) allowed </br>');
            status = '1';
        }
        if (City == '') {
            $('.City').html('The City field is required </br>');
            status = '1';
        }

        if (!State.match(letters_Space)) {
            $('.State').html('Only Alphabet(s) allowed </br>');
            status = '1';
        }
        if (State == '') {
            $('.State').html('The State field is required </br>');
            status = '1';
        }

        if (PostalCode == '') {
            $('.PostalCode').html('The PostalCode field is required </br>');
            status = '1';
        }
        if (!PostalCode.match(regex)) {
            $('.PostalCode').html('Special characters are not allowed </br>');
            status = '1';
        }
        if (status == '0') {
            if (formvalue == '0') {
                $("#UserRoles").removeAttr('disabled', "disabled");
                $("#Email").removeAttr('disabled', "disabled");;
                var a = document.getElementById('sbmt');
                a.click();
            }
        }
        if (status == '1')
        { return false; }
    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
